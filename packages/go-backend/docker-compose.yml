version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-vault-postgres
    environment:
      POSTGRES_DB: ai_vault
      POSTGRES_USER: ai_vault
      POSTGRES_PASSWORD: ai_vault_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ai-vault-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_vault -d ai_vault"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-vault-api
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ai_vault
      DB_PASSWORD: ai_vault_password
      DB_NAME: ai_vault

      # Blockchain Configuration (update these with your actual values)
      ETH_RPC_URL: http://host.docker.internal:8545
      PRIVATE_KEY: your_private_key_here
      VAULT_MANAGER_ADDRESS: 0x...
      WETH_ADDRESS: 0x...
      USDC_ADDRESS: 0x...
      DAI_ADDRESS: 0x...

      # Server Configuration
      SERVER_PORT: 8080
      LOG_LEVEL: info
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai-vault-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: ai-vault-redis
    ports:
      - "6379:6379"
    networks:
      - ai-vault-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:

networks:
  ai-vault-network:
    driver: bridge
